{"version":3,"sources":["../src/db.js"],"names":["Promise","resolve","reject","mongoose","connect","config","db_url","useNewUrlParser","global","db","connection","on","err","console","error","once","log"],"mappings":";;;;;;AAAA;;;;;;kBAEe,kBAAU;AACvB,SAAO,IAAIA,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCC,uBAASC,OAAT,CACEC,OAAOC,MADT,EAEE,EAAEC,iBAAiB,IAAnB,EAFF;AAIA;AACAJ,uBAASH,OAAT,GAAmBQ,OAAOR,OAA1B;AACA;AACA,QAAMS,KAAKN,mBAASO,UAApB;;AAEA;AACAD,OAAGE,EAAH,CAAM,OAAN,EAAe,eAAO;AACpBT,aAAOU,GAAP;AACAC,cAAQC,KAAR,CAAc,2BAAd;AACD,KAHD;;AAKAL,OAAGM,IAAH,CAAQ,MAAR,EAAgB,YAAW;AACzB;AACA;AACAF,cAAQG,GAAR,CAAY,0BAA0BX,OAAOC,MAA7C;AACAL,cAAQQ,EAAR;AACD,KALD;AAMD,GAtBM,CAAP;AAuBD,C","file":"db.js","sourcesContent":["import mongoose from \"mongoose\";\n\nexport default config => {\n  return new Promise((resolve, reject) => {\n    mongoose.connect(\n      config.db_url,\n      { useNewUrlParser: true }\n    );\n    // Get Mongoose to use the global promise library\n    mongoose.Promise = global.Promise;\n    //Get the default connection\n    const db = mongoose.connection;\n\n    //Bind connection to error event (to get notification of connection errors)\n    db.on(\"error\", err => {\n      reject(err);\n      console.error(\"MongoDB connection error:\");\n    });\n\n    db.once(\"open\", function() {\n      // we're connected!\n      // connect to a database if needed, then pass it to `callback`:\n      console.log(\"Database connected at\" + config.db_url);\n      resolve(db);\n    });\n  });\n};\n"]}